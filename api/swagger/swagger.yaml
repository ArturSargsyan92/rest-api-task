swagger: '2.0'
info:
  description: Tourest Admin API Definition.
  version: 1.0.0
  title: Tourest API
  contact:
    email: sargsyan.artur92@gmail.com
host: localhost:3040
basePath: /api/v1

consumes:
  - application/json
produces:
  - application/json

tags:
  - name: users
    description: Users API
  - name: categories
    description: Categories API
  - name: articles
    description: Articles API
  - name: medias
    description: Medias API

securityDefinitions:
  oAuth2Security:
    type: "oauth2"
    tokenUrl: "localhost:3040/api/v1/oauth2/token"
    flow: "password"
    scopes:
      access:admin: Admin access to the API
      access:moderator: Moderator access to the API
      access:member: Member access to the API

paths:
  '/users':
    post:
      summary: add user
      description: Sign up
      tags:
        - users
      operationId: addUser
      parameters:
        - name: user
          in: body
          schema:
            $ref: '#/definitions/AddUserPayload'
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '201':
          description: The new user
          schema:
            $ref: '#/definitions/User'

    get:
      summary: get member users
      description: Sign up.
      tags:
        - users
      operationId: getMembers
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: The users
          schema:
            $ref: '#/definitions/UsersList'
      security:
        - oAuth2Security:
          - access:admin
          - access:moderator
          - access:member

  '/users/moderator':
    post:
      summary: add moderator
      description: Create moderator user.
      tags:
        - users
      operationId: addModerator
      parameters:
        - name: user
          in: body
          schema:
            $ref: '#/definitions/AddUserPayload'
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '201':
          description: The moderator
          schema:
            $ref: '#/definitions/User'
      security:
        - oAuth2Security:
          - access:admin

  '/categories':
    post:
      summary: add category
      description: Add new category.
      tags:
        - categories
      operationId: addCategory
      parameters:
        - name: category
          in: body
          schema:
            $ref: '#/definitions/AddCategoryPayload'
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '201':
          description: The category
          schema:
            $ref: '#/definitions/Category'
      security:
        - oAuth2Security:
          - access:admin
          - access:moderator

    get:
      summary: get all categories
      description: Get all categories
      tags:
        - categories
      operationId: getAllCategories
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: The categories
          schema:
            $ref: '#/definitions/CategoriesList'
      security:
        - oAuth2Security:
          - access:admin
          - access:moderator
          - access:member

  '/categories/{id}':
    delete:
      summary: get category
      description: Get category.
      tags:
        - categories
      operationId: getCategory
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: number
      responses:
        '200':
          description: The category
          schema:
            $ref: '#/definitions/Category'
      security:
        - oAuth2Security:
          - access:admin

  '/articles':
    post:
      summary: add article
      description: Add article.
      tags:
        - articles
      operationId: addArticle
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: article
          in: body
          schema:
            $ref: '#/definitions/AddArticlePayload'
      responses:
        '201':
          description: The article
          schema:
            $ref: '#/definitions/Article'
      security:
        - oAuth2Security:
          - access:moderator

    get:
      summary: get all articles
      description: Get all articles.
      tags:
        - articles
      operationId: getAllArticles
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: The articles
          schema:
            $ref: '#/definitions/ArticlesList'
      security:
        - oAuth2Security:
          - access:admin
          - access:moderator
          - access:member

  '/articles/{id}':
    get:
      summary: get article
      description: Get Article.
      tags:
        - articles
      operationId: getArticle
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: number
      responses:
        '200':
          description: The article.
          schema:
            $ref: '#/definitions/Article'
      security:
        - oAuth2Security:
          - access:admin
          - access:moderator
          - access:member

definitions:
  AddUserPayload:
    type: object
    required:
      - name
      - login
      - password
    properties:
      name:
        type: string
      login:
        type: string
      password:
        type: string
        format: password

  AddCategoryPayload:
    type: object
    required:
      - name
      - description
    properties:
      name:
        type: string
      description:
        type: string

  AddArticlePayload:
    type: object
    required:
      - name
      - content
      - categoryId
    properties:
      name:
        type: string
      content:
        type: string
      categoryId:
        type: number
      urls:
        type: array
        items:
          type: string

  Article:
    type: object
    properties:
      name:
        type: string
      content:
        type: string
      categoryId:
        type: number
      userId:
        type: number
      urls:
        type: array
        items:
          type: string
      user:
        $ref: '#/definitions/User'
      category:
        $ref: '#/definitions/Category'

  ArticlesList:
    type: array
    items:
      $ref: '#/definitions/Article'

  Category:
    type: object
    properties:
      id:
        type: number
        readOnly: true
      name:
        type: string
      description:
        type: string

  CategoriesList:
    type: array
    items:
      $ref: '#/definitions/Category'

  User:
    type: object
    properties:
      id:
        type: number
        readOnly: true
      name:
        type: string
      login:
        type: string

  UsersList:
    type: array
    items:
      $ref: '#/definitions/User'


